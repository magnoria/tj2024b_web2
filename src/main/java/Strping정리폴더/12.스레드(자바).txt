*용어
    1. 프로그램 : 코드(명령어)의 집합
    2. 프로세스 : 실행중인 프로그램
    3. 멀티 태스킹 : 하나의 프로그램에서 두가지 이상의 작업을 동시 처리
    4. 멀티프로세스 : 운영체제가 동시에 여러개 프로세스를 생성하여 처리
        - 멀티 프로세스가 프로그램 단위의 멀티 태스킹
        - 멀티 스레드는 프로그램 내부 에서의 멀티 태스킹

[ 스레드 ]
    1. 정의 : 프로세스 내에서 실행되는 작업 단위 , 각 프로세스는 최소 1개의 스레드를 포함
        -> 그래서 자바는 main함수가 main스레드를 포함 하므로써 하나의 프로세스(프로그램)를 만들 수 있다.
        -> 왜? 자바스크립트는 왜 스레드(main함수)가 존재하지 않을까? 브라우저(프로그램/스레드) JS 읽어드리기 때문에
    2. 목적 : 코드(명령어)를 읽어드리고 CPU가 처리한다.
    3. 자바에서의 스레드
        main함수 :  public static void main(String[] args)에는 main스레드가 내장 됨.
[ 멀티 스레드 ]
    1. 정의 : main 함수 외 새로운 (작업)스레드를 생성하는 경우
    2. 목적 : *병렬처리*
    3. 사용처 : 동기화/비동기화 처리 , 채팅(socket)/파일전송/RESTAPI/JDBC 등등
    4. 사용법
        Thread 클래스 : 새로운 스레드를 생성할때 사용되는 클래스 , 다른 클래스를 상속받을 수 없다.
            -> 주 메소드
                run() :새로운 스레드가 처리(실행)할 코드 정의
                start() : 새로운 스레드 실행

        Runnable 인터페이스 : 새로운 스레드를 생성할때 사용되는 인터페이스 , 다른 클래스를 상속할 수 있다.
            -> 주 추상메소드
                run() : 새로운 스레드가 처리(실행)할 코드 정의

        (1) Thread 상속
            class 클래스명 extends Thread {@Override run(){}}
        (2) implements Runnable 구현 * 구현체
            class 클래스명 implements Runnable {@Override run(){}}
        (3) *익명 구현체
             new Thread( new Runnable(){  @Override run(){}  }  );



    5. 용어
      5. 용어
        (*)         클래스             vs      인터페이스
        차이점       함수의구현                   핵심(함수의추상) , 버전에 따라 구현도 가능
                    멤버변수o                   멤버변수x 상수변수o
                    인스턴스(객체)생성가능        인스턴스(객체) 생성 불가능 , +익명객체 구현하면 가능.


    (*)
            extends(상속)    vs   implements(구현)
    차이점    하나의 클래스만        여러개의 인터페이스 implements 를 쓰면 ,써서 다중 구현 가능
         extends는 하나의 클래스만
              클래스 상속          인터페이스 구현

    (*)
    구현(객)체 : 추상메소드를 갖는 인터페이스를 구현한 클래스의 객체

    익명(객)체 : 추상메소드를 즉석에서 구현한 객체
        new 인터페이스명( ){ ...  }
         ... : 익명객체 구현